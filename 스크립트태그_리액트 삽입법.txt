const App = () => {
  const status5=useScript1("./assets/js/argon-dashboard.min.js?v=1.1.2");
  const status1 = useScript1("./assets/js/plugins/jquery/dist/jquery.min.js");
  const status2=useScript1("./assets/js/plugins/bootstrap/dist/js/bootstrap.bundle.min.js");
  const status3=useScript1("./assets/js/plugins/chart.js/dist/Chart.min.js");
  const status4=useScript1("./assets/js/plugins/chart.js/dist/Chart.extension.js")
  
  
	useEffect(() => {
		if(status1 === "ready" && status2==="ready" && status3==="ready" && status4==="ready" && status5==="ready"){
				// sdk 초기화하기
        return (
          <div className="App">
            <Dashboard/>
          </div>);
		}
    else{
      console.log(status1);
      console.log(status2);
      console.log(status3);
      console.log(status4);
      console.log(status5);
      console.log('=====================  ')
    }
	})
  return (
    <div className="App">
      <Dashboard/>
    </div>
  );
};

export default App;




========================
class App extends React.Component{

  componentDidMount(){
    //An array of assets
    let scripts = [
      { src: "./assets/js/plugins/jquery/dist/jquery.min.js" },
        { src: "./assets/js/argon-dashboard.min.js?v=1.1.2" },
        { src: "./assets/js/plugins/bootstrap/dist/js/bootstrap.bundle.min.js" },
        { src: "./assets/js/plugins/chart.js/dist/Chart.min.js" },
        { src: "./assets/js/plugins/chart.js/dist/Chart.extension.js" },
    ]
    //Append the script element on each iteration
    scripts.forEach(item => { 
        const script = document.createElement("script")
        script.src = item.src
        script.async = true
        document.body.appendChild(script)
    })    
  }
  render(){
    return (
      <div className="App">
        <Dashboard/>
      </div>
    );
}
}